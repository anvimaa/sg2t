// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")

  // provider = "sqlite"
  // url      = env("DATABASE_URL")
}

model Bairro {
  id        Int       @id @default(autoincrement())
  nome      String    @unique
  descricao String?
  markings  Marking[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Categoria {
  id        Int       @id @default(autoincrement())
  nome      String
  descricao String?
  markings  Marking[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Marking {
  id          Int        @id @default(autoincrement())
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  type        String
  geojson     String
  name        String
  code        String     @unique
  ref         String?
  fillColor   String
  fillOpacity Int
  color       String
  weight      Int
  bairroId    Int
  categoriaId Int
  bairro      Bairro     @relation(fields: [bairroId], references: [id])
  categoria   Categoria? @relation(fields: [categoriaId], references: [id])
  terrenos    Terreno[]
}

model Utente {
  id         Int       @id @default(autoincrement())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  nome       String
  bi         String    @unique
  genero     String
  nascimento DateTime?
  morada     String
  foto       String?
  telefone   String?   @unique
  email      String?   @unique
  terrenos   Terreno[]
}

model Terreno {
  id             Int       @id @default(autoincrement())
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  estado         String?   @default("Pendente")
  proprietarioId Int
  markingId      Int
  proprietario   Utente?   @relation(fields: [proprietarioId], references: [id])
  marking        Marking?  @relation(fields: [markingId], references: [id])
  licenca        Licenca[]
}

model Licenca {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  descricao String
  numero    String
  terrenoId Int
  terreno   Terreno? @relation(fields: [terrenoId], references: [id])
}

model Todo {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
}
